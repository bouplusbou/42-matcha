'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var data = require('../../data/space.json');

var Space = function () {
  function Space(faker) {
    _classCallCheck(this, Space);

    this.faker = faker;
  }

  _createClass(Space, [{
    key: 'planet',
    value: function planet() {
      return this.faker.Random.element(data['planets']);
    }
  }, {
    key: 'moon',
    value: function moon() {
      return this.faker.Random.element(data['moons']);
    }
  }, {
    key: 'galaxy',
    value: function galaxy() {
      return this.faker.Random.element(data['galaxies']);
    }
  }, {
    key: 'nebula',
    value: function nebula() {
      return this.faker.Random.element(data['nebulas']);
    }
  }, {
    key: 'starCluster',
    value: function starCluster() {
      return this.faker.Random.element(data['starClusters']);
    }
  }, {
    key: 'constellation',
    value: function constellation() {
      return this.faker.Random.element(data['constellations']);
    }
  }, {
    key: 'star',
    value: function star() {
      return this.faker.Random.element(data['stars']);
    }
  }, {
    key: 'agency',
    value: function agency() {
      return this.faker.Random.element(data['agencies']);
    }
  }, {
    key: 'agencyAbv',
    value: function agencyAbv() {
      return this.faker.Random.element(data['agencyAbvs']);
    }
  }, {
    key: 'nasaSpaceCraft',
    value: function nasaSpaceCraft() {
      return this.faker.Random.element(data['nasaSpaceCrafts']);
    }
  }, {
    key: 'company',
    value: function company() {
      return this.faker.Random.element(data['companies']);
    }
  }, {
    key: 'distanceMeasurement',
    value: function distanceMeasurement() {
      return this.faker.Random.element(data['distanceMeasurements']);
    }
  }, {
    key: 'meteorite',
    value: function meteorite() {
      return this.faker.Random.element(data['meteorites']);
    }
  }]);

  return Space;
}();

exports.default = Space;