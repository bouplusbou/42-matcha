'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function parseModule(faker, match) {
  var v = match.replace(/[{}]/g, '').split('.');
  var module = v[0];
  var method = v[1];

  if (typeof faker[module] === 'undefined') {
    throw new Error('Invalid module: ' + module);
  }

  if (typeof faker[module][method] === 'undefined') {
    throw new Error('Invalid method: ' + module + '.' + method);
  }

  return faker[module][method]();
}

var Fake = function () {
  function Fake(faker) {
    _classCallCheck(this, Fake);

    this.faker = faker;
  }

  _createClass(Fake, [{
    key: 'f',
    value: function f(str) {
      var _this = this;

      if (typeof str !== 'string' || str.length === 0) {
        throw new Error('A string must be specified');
      }

      return str.replace(/\{(\w+)\.(\w+)\}/g, function (m) {
        return parseModule(_this.faker, m);
      }).replace(/#/g, function (_) {
        return _this.faker.Number.between(0, 9);
      });
    }
  }]);

  return Fake;
}();

exports.default = Fake;