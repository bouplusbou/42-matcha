'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function isValidNumber(value) {
  return (/^\d+$/.test(value)
  );
}

function isValidBoolean(value) {
  return (/(true|false)/.test(value)
  );
}

var Fillmurray = function () {
  function Fillmurray(faker) {
    _classCallCheck(this, Fillmurray);

    this.faker = faker;
  }

  _createClass(Fillmurray, [{
    key: 'image',
    value: function image() {
      var grayscale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      var width = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 200;
      var height = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 200;

      if (!isValidNumber(width)) {
        throw new Error('Width should be a number');
      }
      if (!isValidNumber(height)) {
        throw new Error('Height should be a number');
      }
      if (!isValidBoolean(grayscale)) {
        throw new Error('Grayscale should be a boolean');
      }

      return ['https://fillmurray.com', grayscale ? 'g' : null, width, height].filter(function (x) {
        return x;
      }).join('/');
    }
  }]);

  return Fillmurray;
}();

exports.default = Fillmurray;