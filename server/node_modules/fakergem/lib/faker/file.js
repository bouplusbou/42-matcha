'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var data = require('../../data/file.json');

var File = function () {
  function File(faker) {
    _classCallCheck(this, File);

    this.faker = faker;
  }

  _createClass(File, [{
    key: 'extension',
    value: function extension() {
      return this.faker.Random.element(data['extensions']);
    }
  }, {
    key: 'mimeType',
    value: function mimeType() {
      return this.faker.Random.element(data['mimeTypes']);
    }
  }, {
    key: 'fileName',
    value: function fileName() {
      var dir = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
      var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
      var ext = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
      var directorySeparator = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '/';

      dir = dir || this.faker.Lorem.words(2).join('-');
      name = name || this.faker.Lorem.word();
      ext = ext || this.extension();

      return [dir, name].join(directorySeparator) + '.' + ext;
    }
  }]);

  return File;
}();

exports.default = File;