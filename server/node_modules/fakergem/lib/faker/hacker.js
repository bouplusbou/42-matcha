'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var data = require('../../data/hacker.json');

function parse(faker, format) {
  var text = format.replace(/\{(\w+)\}/g, function (m) {
    return '{Hacker.' + m.substring(1);
  });
  return faker.Fake.f(text).replace(/^(\w)/, function (m) {
    return m[0].toUpperCase();
  });
}

var Hacker = function () {
  function Hacker(faker) {
    _classCallCheck(this, Hacker);

    this.faker = faker;
  }

  _createClass(Hacker, [{
    key: 'saySomethingSmart',
    value: function saySomethingSmart() {
      return parse(this.faker, this.faker.Random.element(data['phrases']));
    }
  }, {
    key: 'abbreviation',
    value: function abbreviation() {
      return this.faker.Random.element(data['abbreviations']);
    }
  }, {
    key: 'adjective',
    value: function adjective() {
      return this.faker.Random.element(data['adjectives']);
    }
  }, {
    key: 'noun',
    value: function noun() {
      return this.faker.Random.element(data['nouns']);
    }
  }, {
    key: 'verb',
    value: function verb() {
      return this.faker.Random.element(data['verbs']);
    }
  }, {
    key: 'ingverb',
    value: function ingverb() {
      return this.faker.Random.element(data['ingverbs']);
    }
  }]);

  return Hacker;
}();

exports.default = Hacker;