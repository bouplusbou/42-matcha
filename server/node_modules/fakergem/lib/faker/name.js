'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var data = require('../../data/name.json');

var Name = function () {
  function Name(faker) {
    _classCallCheck(this, Name);

    this.faker = faker;
  }

  _createClass(Name, [{
    key: 'name',
    value: function name() {
      return [this.firstName(), this.lastName()].join(' ');
    }
  }, {
    key: 'nameWithMiddle',
    value: function nameWithMiddle() {
      return [this.firstName(), this.firstName(), this.lastName()].join(' ');
    }
  }, {
    key: 'firstName',
    value: function firstName() {
      return this.faker.Random.element(data['firstNames']);
    }
  }, {
    key: 'lastName',
    value: function lastName() {
      return this.faker.Random.element(data['lastNames']);
    }
  }, {
    key: 'prefix',
    value: function prefix() {
      return this.faker.Random.element(data['prefixes']);
    }
  }, {
    key: 'suffix',
    value: function suffix() {
      return this.faker.Random.element(data['suffixes']);
    }
  }, {
    key: 'title',
    value: function title() {
      return [this.faker.Random.element(data['titles']['descriptor']), this.faker.Random.element(data['titles']['level']), this.faker.Random.element(data['titles']['job'])].join(' ');
    }
  }]);

  return Name;
}();

exports.default = Name;