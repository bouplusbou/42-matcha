'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var data = require('../../data/educator.json');

var Educator = function () {
  function Educator(faker) {
    _classCallCheck(this, Educator);

    this.faker = faker;
  }

  _createClass(Educator, [{
    key: 'university',
    value: function university() {
      var name = this.faker.Random.element(data['names']);
      var tertiaryType = this.faker.Random.element(data['tertiaries']['types']);
      return name + ' ' + tertiaryType;
    }
  }, {
    key: 'secondarySchool',
    value: function secondarySchool() {
      var name = this.faker.Random.element(data['names']);
      var secondary = this.faker.Random.element(data['secondaries']);
      return name + ' ' + secondary;
    }
  }, {
    key: 'course',
    value: function course() {
      var courseType = this.faker.Random.element(data['tertiaries']['course']['types']);
      var courseSubject = this.faker.Random.element(data['tertiaries']['course']['subjects']);
      return courseType + ' ' + courseSubject;
    }
  }, {
    key: 'campus',
    value: function campus() {
      var name = this.faker.Random.element(data['names']);
      return name + ' Campus';
    }
  }]);

  return Educator;
}();

exports.default = Educator;